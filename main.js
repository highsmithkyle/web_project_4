!function(){"use strict";var e={modalSelector:"modal",profileModalSelector:"modal_profile",modalProfile:document.querySelector(".modal_profile"),profileFormEL:document.querySelector(".modal__form_type_edit-form"),profileEditButton:document.querySelector(".profile__edit-button"),profileFormCloseButton:document.querySelector(".modal__close-button_type_profile"),profileAddButton:document.querySelector(".profile__add-button"),profileFormNameInput:document.querySelector(".modal__info_place_name-input"),profileFormAboutMeInput:document.querySelector(".modal__info_place_about-me-input"),profileTitle:document.querySelector(".profile__title"),profileSubtitle:document.querySelector(".profile__subtitle")},t={addCardSelector:"modal_add-card",deleteCardSelector:"modal_delete",deleteCardForm:"modal__form_type_delete",addModalEl:document.querySelector(".modal_add-card"),addFormEl:document.querySelector(".modal__form_type_new-place"),addFormCloseButton:document.querySelector(".modal__close-button_type_new-place"),addFormPlaceInput:document.querySelector(".modal__info_place_new-title-input"),addFormUrlInput:document.querySelector(".modal__info_place_url-input")},r={avatarModalSelector:"modal_avatar",avatarEditButton:document.querySelector(".profile__avatar-button"),avatarFormEl:document.querySelector(".modal__form_type_avatar"),avatarElement:document.querySelector(".profile__image")},n={formSelector:"modal__form",inputSelector:".modal__info",submitButtonSelector:".modal__save-button",inactiveButtonClass:"modal__save-button_disabled",inputErrorClass:"modal__info_type_error",errorClass:"modal__error_active"};function o(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var i=function(){function e(t,r){var n=t.data,o=t.handlePreviewImage,i=t.handleLikeIcon,a=t.handleDeleteIcon,l=t.userId;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userId=l,this._name=n.name,this._link=n.link,this._likedCard=n.likes,this._numberLikes=n.likes.length,this._handlePreviewImage=o,this._handleLikeIcon=i,this._handleDeleteIcon=a,this._cardId=n._id,this._ownerId=n.owner._id,this._cardSelector=r}var t,r;return t=e,(r=[{key:"_getTemplate",value:function(){var e=document.querySelector(this._cardSelector).content.querySelector(".elements__container").cloneNode(!0);this._element=e}},{key:"getView",value:function(){this._getTemplate(),this._setEventListeners();var e=this._element.querySelector(".elements__image");return this._element.querySelector(".elements__text").textContent=this._name,e.src=this._link,e.alt=this._name,this._getInitialLikes(e),this._element}},{key:"_setEventListeners",value:function(){var e=this;this._element.querySelector(".elements__image").addEventListener("click",(function(){return e._handlePreviewImage()})),this._numberOfLikes=this._element.querySelector(".elements__heart-number"),this._deleteButton=this._element.querySelector(".elements__delete"),this._ownerId===this._userId?this._deleteButton.addEventListener("click",(function(t){e._handleDeleteIcon(t)})):this._deleteButton.remove(),this._heartLike=this._element.querySelector(".elements__heart"),this._heartLike.addEventListener("click",(function(t){e._liked(t)}))}},{key:"_checkLikes",value:function(e){this._numberOfLikes.textContent=e.likes.length}},{key:"_liked",value:function(e){var t=this;this._handleLikeIcon(!e.target.classList.contains("elements__heart_active")).then((function(r){e.target.classList.toggle("elements__heart_active"),t._checkLikes(r)})).catch((function(e){console.error(e)}))}},{key:"_getInitialLikes",value:function(){var e=this;this._likedCard.some((function(t){return t._id===e._userId}))&&this._heartLike.classList.add("elements__heart_active"),this._element.querySelector(".elements__heart-number").textContent=this._numberLikes}}])&&o(t.prototype,r),e}();function a(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function l(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function u(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}var c=function(){function e(t,r){var n=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),u(this,"_showInputError",(function(e){var t=n._formEl.querySelector("#"+e.id+"-error");e.classList.add(n._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(n._errorClass)})),u(this,"_hideInputError",(function(e){var t=n._formEl.querySelector("#"+e.id+"-error");e.classList.remove(n._inputErrorClass),t.classList.remove(n._errorClass),t.textContent=""})),u(this,"_checkInputValidity",(function(e){e.validity.valid?n._hideInputError(e):n._showInputError(e)})),u(this,"_hasValidInputs",(function(e){return e.every((function(e){return e.validity.valid}))})),this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._formEl=r}var t,r;return t=e,(r=[{key:"_toggleButton",value:function(){this._hasValidInputs(this._inputList)?(this._submitButton.disabled=!1,this._submitButton.classList.remove(this._inactiveButtonClass)):(this._submitButton.disabled=!0,this._submitButton.classList.add(this._inactiveButtonClass))}},{key:"_setEventListeners",value:function(){var e,t=this;this._inputList=function(e){if(Array.isArray(e))return a(e)}(e=this._formEl.querySelectorAll(this._inputSelector))||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return a(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?a(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),this._submitButton=this._formEl.querySelector(this._submitButtonSelector),this._inputList.forEach((function(e){e.addEventListener("input",(function(r){t._checkInputValidity(e),t._toggleButton()}))}))}},{key:"resetValidation",value:function(){var e=this;this._toggleButton(),this._inputList.forEach((function(t){e._hideInputError(t)}))}},{key:"enableValidation",value:function(){this._formEl.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}}])&&l(t.prototype,r),e}();function s(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var f=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._modalElement=document.querySelector(".".concat(t)),this._handleEscClose=this._handleEscClose.bind(this)}var t,r;return t=e,(r=[{key:"setEventListeners",value:function(){var e=this;this._modalElement.addEventListener("click",(function(t){(t.target.classList.contains("modal")||t.target.classList.contains("modal__close-button"))&&e.close()}))}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"open",value:function(){this._modalElement.classList.add("modal_toggle"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._modalElement.classList.remove("modal_toggle"),document.removeEventListener("keydown",this._handleEscClose)}}])&&s(t.prototype,r),e}();function d(e){return d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},d(e)}function h(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function m(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function p(e,t,r){return p="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=v(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(r):o.value}},p(e,t,r||e)}function _(e,t){return _=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},_(e,t)}function y(e,t){if(t&&("object"===d(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function v(e){return v=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},v(e)}var b=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&_(e,t)}(a,e);var t,r,n,o,i=(n=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=v(n);if(o){var r=v(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return y(this,e)});function a(){return h(this,a),i.apply(this,arguments)}return t=a,(r=[{key:"open",value:function(e){var t=e.link,r=e.name;this._modalElement.querySelector(".modal__image-subtitle").textContent=r;var n=this._modalElement.querySelector(".modal__image-preview");n.src=t,n.alt=r,p(v(a.prototype),"open",this).call(this)}}])&&m(t.prototype,r),a}(f),E=b;function S(e){return S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},S(e)}function g(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function k(e,t,r){return k="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=C(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(r):o.value}},k(e,t,r||e)}function w(e,t){return w=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},w(e,t)}function I(e,t){if(t&&("object"===S(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function C(e){return C=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},C(e)}var L=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&w(e,t)}(a,e);var t,r,n,o,i=(n=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=C(n);if(o){var r=C(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return I(this,e)});function a(e){var t,r=e.popupSelector,n=e.handleFormSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,r))._popupForm=t._modalElement.querySelector(".modal__form"),t._handleFormSubmit=n,t._button=t._modalElement.querySelector(".modal__save-button"),t}return t=a,(r=[{key:"_getInputValues",value:function(){var e=this;return this._inputList=Array.from(this._modalElement.querySelectorAll(".modal__info")),this._formValues={},this._inputList.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"setEventListeners",value:function(){var e=this;this._modalElement.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._getInputValues())})),k(C(a.prototype),"setEventListeners",this).call(this)}},{key:"close",value:function(){this._popupForm.reset(),k(C(a.prototype),"close",this).call(this)}}])&&g(t.prototype,r),a}(f);function O(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var P=function(){function e(t,r){var n=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=n,this._container=document.querySelector(".".concat(r))}var t,r;return t=e,(r=[{key:"addItem",value:function(e){this._container.prepend(e)}},{key:"renderItems",value:function(e){var t=this;e.forEach((function(e){t._renderer(e)}))}}])&&O(t.prototype,r),e}();function j(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var q=function(){function e(t){var r=t.userNameElement,n=t.userDescriptionElement,o=t.userAvatarElement,i=t.userId;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userNameEl=r,this._userDescriptionEl=n,this._userAvatarElement=o,this._userId=i}var t,r;return t=e,(r=[{key:"getUserInfo",value:function(){return{userName:this._userNameEl.textContent,userDescription:this._userDescriptionEl.textContent}}},{key:"getId",value:function(){return this._userId}},{key:"setUserInfo",value:function(e){this._userNameEl.textContent=e.name,this._userDescriptionEl.textContent=e.about,this._userAvatarElement.src=e.avatar,this._userId=e._id}}])&&j(t.prototype,r),e}();function B(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}var F=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.baseUrl=t.baseUrl,this.headers=t.headers}var t,r;return t=e,(r=[{key:"_checkErrors",value:function(e){return e.ok?e.json():Promise.reject("Error")}},{key:"getInitialProfile",value:function(){var e=this;return fetch("".concat(this.baseUrl,"/users/me"),{headers:this.headers}).then((function(t){return e._checkErrors(t)}))}},{key:"getInitialCards",value:function(){var e=this;return fetch("".concat(this.baseUrl,"/cards"),{headers:this.headers}).then((function(t){return e._checkErrors(t)}))}},{key:"fetchCard",value:function(e){var t=this,r=e.name,n=e.link;return fetch("".concat(this.baseUrl,"/cards"),{method:"POST",headers:this.headers,body:JSON.stringify({name:r,link:n})}).then((function(e){return t._checkErrors(e)}))}},{key:"fetchProfileInfo",value:function(e){var t=this,r=e.name,n=e.about;return fetch("".concat(this.baseUrl,"/users/me"),{method:"PATCH",headers:this.headers,body:JSON.stringify({name:r,about:n})}).then((function(e){return t._checkErrors(e)}))}},{key:"changeProfileAvatar",value:function(e){var t=this,r=e.avatar;return fetch("".concat(this.baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this.headers,body:JSON.stringify({avatar:r})}).then((function(e){return t._checkErrors(e)}))}},{key:"deleteCard",value:function(e){var t=this;return fetch("".concat(this.baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this.headers}).then((function(e){return t._checkErrors(e)}))}},{key:"likeCard",value:function(e){var t=this;return fetch("".concat(this.baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:this.headers}).then((function(e){return t._checkErrors(e)}))}},{key:"removeLike",value:function(e){var t=this;return fetch("".concat(this.baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:this.headers}).then((function(e){return t._checkErrors(e)}))}}])&&B(t.prototype,r),e}();function A(e){return A="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},A(e)}function T(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}function R(e,t,r){return R="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,r){var n=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=x(e)););return e}(e,t);if(n){var o=Object.getOwnPropertyDescriptor(n,t);return o.get?o.get.call(r):o.value}},R(e,t,r||e)}function U(e,t){return U=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},U(e,t)}function D(e,t){if(t&&("object"===A(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function x(e){return x=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},x(e)}var V=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&U(e,t)}(a,e);var t,r,n,o,i=(n=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=x(n);if(o){var r=x(this).constructor;e=Reflect.construct(t,arguments,r)}else e=t.apply(this,arguments);return D(this,e)});function a(e){var t,r=e.popupSelector,n=e.handleFormSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,r))._popupForm=t._modalElement.querySelector(".modal__form"),t._handleFormSubmit=n,t._button=t._modalElement.querySelector(".modal__save-button"),t}return t=a,(r=[{key:"open",value:function(e,t){R(x(a.prototype),"open",this).call(this),this._cardId=t,this._card=e.target.parentElement}},{key:"setEventListeners",value:function(){var e=this;this._popupForm.addEventListener("submit",(function(t){t.preventDefault(),e._handleFormSubmit(e._card,e._cardId)})),R(x(a.prototype),"setEventListeners",this).call(this)}}])&&T(t.prototype,r),a}(f);function M(e,t){(null==t||t>e.length)&&(t=e.length);for(var r=0,n=new Array(t);r<t;r++)n[r]=e[r];return n}function N(e,t,r){document.querySelector(".".concat(t)).querySelector(".modal__save-button").textContent=r}var J=new F({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"f4ba53cb-c4b1-4360-b78c-98b41af44bf6","Content-Type":"application/json"}}),H=J.getInitialProfile(),$=J.getInitialCards();Promise.all([H,$]).then((function(e){var t,r,n=(r=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var r=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=r){var n,o,i=[],a=!0,l=!1;try{for(r=r.call(e);!(a=(n=r.next()).done)&&(i.push(n.value),!t||i.length!==t);a=!0);}catch(e){l=!0,o=e}finally{try{a||null==r.return||r.return()}finally{if(l)throw o}}return i}}(t,r)||function(e,t){if(e){if("string"==typeof e)return M(e,t);var r=Object.prototype.toString.call(e).slice(8,-1);return"Object"===r&&e.constructor&&(r=e.constructor.name),"Map"===r||"Set"===r?Array.from(e):"Arguments"===r||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(r)?M(e,t):void 0}}(t,r)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=n[0],i=n[1];K.setUserInfo(o),G.renderItems(i.reverse())})).catch((function(e){console.error(e)}));var z=function(e){return new i({data:e,handlePreviewImage:function(){Z.open(e)},handleDeleteIcon:function(t){W.open(t,e._id)},handleLikeIcon:function(t){return t?J.likeCard(e._id):J.removeLike(e._id)},userId:K.getId()},"#elements-template")},G=new P({renderer:function(e){var t=z(e).getView();G.addItem(t)}},"elements"),K=new q({userNameElement:e.profileTitle,userDescriptionElement:e.profileSubtitle,userAvatarElement:r.avatarElement}),Q=new L({popupSelector:t.addCardSelector,handleFormSubmit:function(e){N(0,t.addCardSelector,"Creating..."),J.fetchCard(e).then((function(e){var t=z(e);G.addItem(t.getView()),Q.close()})).catch((function(e){console.error(e)})).finally((function(){N(0,t.addCardSelector,"Create")}))}}),W=new V({popupSelector:t.deleteCardSelector,handleFormSubmit:function(e,r){N(0,t.deleteCardSelector,"Deleting..."),J.deleteCard(r).then((function(){e.remove(),W.close()})).catch((function(e){console.error(e)})).finally((function(){N(0,t.deleteCardSelector,"Delete")}))}}),X=new L({popupSelector:e.profileModalSelector,handleFormSubmit:function(t){N(0,e.profileModalSelector,"Updating..."),J.fetchProfileInfo(t).then((function(e){K.setUserInfo(e),X.close()})).catch((function(e){console.error(e)})).finally((function(){N(0,e.profileModalSelector,"Update")}))}}),Y=new L({popupSelector:r.avatarModalSelector,handleFormSubmit:function(e){N(0,r.avatarModalSelector,"Updating..."),J.changeProfileAvatar(e).then((function(e){K.setUserInfo(e),Y.close()})).catch((function(e){console.error(e)})).finally((function(){N(0,r.avatarModalSelector,"Update")}))}}),Z=new E("modal_type_image-expand"),ee=new c(n,e.profileFormEL),te=new c(n,t.addFormEl),re=new c(n,r.avatarFormEl);ee.enableValidation(),te.enableValidation(),re.enableValidation(),Q.setEventListeners(),X.setEventListeners(),Z.setEventListeners(),Y.setEventListeners(),W.setEventListeners(),e.profileAddButton.addEventListener("click",(function(){te.resetValidation(),Q.open()})),e.profileEditButton.addEventListener("click",(function(){var t=K.getUserInfo();e.profileFormNameInput.value=t.userName,e.profileFormAboutMeInput.value=t.userDescription,X.open()})),r.avatarEditButton.addEventListener("click",(function(){re.resetValidation(),Y.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,