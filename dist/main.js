!function(){"use strict";var e={modalSelector:"modal",profileModalSelector:"modal_profile",modalProfile:document.querySelector(".modal_profile"),profileFormEL:document.querySelector(".modal__form_type_edit-form"),profileEditButton:document.querySelector(".profile__edit-button"),profileFormCloseButton:document.querySelector(".modal__close-button_type_profile"),profileAddButton:document.querySelector(".profile__add-button"),profileFormNameInput:document.querySelector(".modal__info_place_name-input"),profileFormAboutMeInput:document.querySelector(".modal__info_place_about-me-input"),profileTitle:document.querySelector(".profile__title"),profileSubtitle:document.querySelector(".profile__subtitle")},t={addCardSelector:"modal_add-card",deleteCardSelector:"modal_delete",addModalEl:document.querySelector(".modal_add-card"),addFormEl:document.querySelector(".modal__form_type_new-place"),addFormCloseButton:document.querySelector(".modal__close-button_type_new-place"),addFormPlaceInput:document.querySelector(".modal__info_place_new-title-input"),addFormUrlInput:document.querySelector(".modal__info_place_url-input")},n={avatarModalSelector:"modal_avatar",avatarEditButton:document.querySelector(".profile__avatar-button"),avatarFormEl:document.querySelector(".modal__form_type_avatar"),avatarElement:document.querySelector(".profile__image")},r={formSelector:"modal__form",inputSelector:".modal__info",submitButtonSelector:".modal__save-button",inactiveButtonClass:"modal__save-button_disabled",inputErrorClass:"modal__info_type_error",errorClass:"modal__error_active"};function o(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var i=function(){function e(t,n){var r=t.data,o=t.handlePreviewImage,i=t.handleLikeIcon,a=t.handleDeleteIcon,l=t.userId;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userId=l,this._name=r.name,this._link=r.link,this._likedCard=r.likes,this._numberLikes=r.likes.length,this._handlePreviewImage=o,this._handleLikeIcon=i,this._handleDeleteIcon=a,this._cardId=r._id,this._ownerId=r.owner._id,this._cardSelector=n}var t,n;return t=e,(n=[{key:"_getTemplate",value:function(){var e=document.querySelector(this._cardSelector).content.querySelector(".elements__container").cloneNode(!0);this._element=e}},{key:"getView",value:function(){this._getTemplate(),this._setEventListeners();var e=this._element.querySelector(".elements__image");return this._element.querySelector(".elements__text").textContent=this._name,e.src=this._link,e.alt=this._name,this._getInitialLikes(e),this._element}},{key:"_setEventListeners",value:function(){var e=this;this._element.querySelector(".elements__image").addEventListener("click",(function(){return e._handlePreviewImage()})),this._deleteButton=this._element.querySelector(".elements__delete"),this._ownerId===this._userId?this._deleteButton.addEventListener("click",(function(t){e._handleDeleteIcon(t)})):this._deleteButton.remove(),this._heartLike=this._element.querySelector(".elements__heart"),this._heartLike.addEventListener("click",(function(t){e._liked(t)}))}},{key:"_handleLikeIcon",value:function(){this._heartLike.classList.toggle("elements__heart_active")}},{key:"_handleDeleteIcon",value:function(){this._element.remove()}},{key:"_checkLikes",value:function(e){this._element.querySelector(".elements__heart-number").textContent=e.likes.length}},{key:"_liked",value:function(e){var t=this;this._handleLikeIcon(!e.target.classList.contains(".elements__heart_active")).then((function(n){e.target.classList.toggle(".elements__heart_active"),t._checkLikes(n)})).catch((function(e){console.log("Error:".concat(e))}))}},{key:"_getInitialLikes",value:function(){var e=this;this._likedCard.some((function(t){return t._id===e._userId}))&&this._heartLike.classList.add("elements__heart_active"),this._element.querySelector(".elements__heart-number").textContent=this._numberLikes}}])&&o(t.prototype,n),e}();function a(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function l(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function c(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var u=function(){function e(t,n){var r=this;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),c(this,"_showInputError",(function(e){var t=r._formEl.querySelector("#"+e.id+"-error");e.classList.add(r._inputErrorClass),t.textContent=e.validationMessage,t.classList.add(r._errorClass)})),c(this,"_hideInputError",(function(e){var t=r._formEl.querySelector("#"+e.id+"-error");e.classList.remove(r._inputErrorClass),t.classList.remove(r._errorClass),t.textContent=""})),c(this,"_checkInputValidity",(function(e){e.validity.valid?r._hideInputError(e):r._showInputError(e)})),c(this,"_hasValidInputs",(function(e){return e.every((function(e){return e.validity.valid}))})),this._inputSelector=t.inputSelector,this._submitButtonSelector=t.submitButtonSelector,this._inactiveButtonClass=t.inactiveButtonClass,this._inputErrorClass=t.inputErrorClass,this._errorClass=t.errorClass,this._formEl=n}var t,n;return t=e,(n=[{key:"_toggleButton",value:function(){this._hasValidInputs(this._inputList)?(this._submitButton.disabled=!1,this._submitButton.classList.remove(this._inactiveButtonClass)):(this._submitButton.disabled=!0,this._submitButton.classList.add(this._inactiveButtonClass))}},{key:"_setEventListeners",value:function(){var e,t=this;this._inputList=function(e){if(Array.isArray(e))return a(e)}(e=this._formEl.querySelectorAll(this._inputSelector))||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return a(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?a(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}(),this._submitButton=this._formEl.querySelector(this._submitButtonSelector),this._inputList.forEach((function(e){e.addEventListener("input",(function(n){t._checkInputValidity(e),t._toggleButton()}))}))}},{key:"resetValidation",value:function(){var e=this;this._toggleButton(),this._inputList.forEach((function(t){e._hideInputError(t)}))}},{key:"enableValidation",value:function(){this._formEl.addEventListener("submit",(function(e){e.preventDefault()})),this._setEventListeners()}}])&&l(t.prototype,n),e}();function s(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var f=function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._modalElement=document.querySelector(".".concat(t)),this._handleEscClose=this._handleEscClose.bind(this)}var t,n;return t=e,(n=[{key:"setEventListeners",value:function(){var e=this;this._modalElement.addEventListener("click",(function(t){(t.target.classList.contains("modal")||t.target.classList.contains("modal__close-button"))&&e.close()}))}},{key:"_handleEscClose",value:function(e){"Escape"===e.key&&this.close()}},{key:"open",value:function(){this._modalElement.classList.add("modal_toggle"),document.addEventListener("keydown",this._handleEscClose)}},{key:"close",value:function(){this._modalElement.classList.remove("modal_toggle"),document.removeEventListener("keydown",this._handleEscClose)}}])&&s(t.prototype,n),e}();function d(e){return d="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},d(e)}function h(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function m(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function _(e,t,n){return _="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=v(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},_(e,t,n||e)}function p(e,t){return p=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},p(e,t)}function y(e,t){if(t&&("object"===d(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function v(e){return v=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},v(e)}var b=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&p(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=v(r);if(o){var n=v(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return y(this,e)});function a(){return h(this,a),i.apply(this,arguments)}return t=a,(n=[{key:"open",value:function(e){var t=e.link,n=e.name;this._modalElement.querySelector(".modal__image-subtitle").textContent=n;var r=this._modalElement.querySelector(".modal__image-preview");r.src=t,r.alt=n,_(v(a.prototype),"open",this).call(this)}}])&&m(t.prototype,n),a}(f),E=b;function S(e){return S="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},S(e)}function g(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function k(e,t,n){return k="undefined"!=typeof Reflect&&Reflect.get?Reflect.get:function(e,t,n){var r=function(e,t){for(;!Object.prototype.hasOwnProperty.call(e,t)&&null!==(e=C(e)););return e}(e,t);if(r){var o=Object.getOwnPropertyDescriptor(r,t);return o.get?o.get.call(n):o.value}},k(e,t,n||e)}function w(e,t){return w=Object.setPrototypeOf||function(e,t){return e.__proto__=t,e},w(e,t)}function I(e,t){if(t&&("object"===S(t)||"function"==typeof t))return t;if(void 0!==t)throw new TypeError("Derived constructors may only return object or undefined");return function(e){if(void 0===e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return e}(e)}function C(e){return C=Object.setPrototypeOf?Object.getPrototypeOf:function(e){return e.__proto__||Object.getPrototypeOf(e)},C(e)}var L=function(e){!function(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function");e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,writable:!0,configurable:!0}}),t&&w(e,t)}(a,e);var t,n,r,o,i=(r=a,o=function(){if("undefined"==typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"==typeof Proxy)return!0;try{return Boolean.prototype.valueOf.call(Reflect.construct(Boolean,[],(function(){}))),!0}catch(e){return!1}}(),function(){var e,t=C(r);if(o){var n=C(this).constructor;e=Reflect.construct(t,arguments,n)}else e=t.apply(this,arguments);return I(this,e)});function a(e){var t,n=e.popupSelector,r=e.handleFormSubmit;return function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,a),(t=i.call(this,n))._popupForm=t._modalElement.querySelector(".modal__form"),t._handleFormSubmit=r,t._button=t._modalElement.querySelector(".modal__save-button"),t}return t=a,(n=[{key:"_getInputValues",value:function(){var e=this;return this._inputList=Array.from(this._modalElement.querySelectorAll(".modal__info")),this._formValues={},this._inputList.forEach((function(t){e._formValues[t.name]=t.value})),this._formValues}},{key:"setEventListeners",value:function(){var e=this;this._modalElement.addEventListener("submit",(function(){e._handleFormSubmit(e._getInputValues()),e.close()})),k(C(a.prototype),"setEventListeners",this).call(this)}},{key:"close",value:function(){this._popupForm.reset(),k(C(a.prototype),"close",this).call(this)}}])&&g(t.prototype,n),a}(f);function O(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var P=function(){function e(t,n){var r=t.renderer;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._renderer=r,this._container=document.querySelector(".".concat(n))}var t,n;return t=e,(n=[{key:"addItem",value:function(e){this._container.prepend(e)}},{key:"renderItems",value:function(e){var t=this;e.forEach((function(e){t._renderer(e)}))}}])&&O(t.prototype,n),e}();function q(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}var j=function(){function e(t){var n=t.userNameElement,r=t.userDescriptionElement,o=t.userAvatarElement,i=t.userId;!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this._userNameEl=n,this._userDescriptionEl=r,this._userAvatarElement=o,this._userId=i}var t,n;return t=e,(n=[{key:"getUserInfo",value:function(){return{userName:this._userNameEl.textContent,userDescription:this._userDescriptionEl.textContent}}},{key:"getId",value:function(){return this._userId}},{key:"setUserInfo",value:function(e){this._userNameEl.textContent=e.name,this._userDescriptionEl.textContent=e.about,this._userAvatarElement.src=e.avatar,this._userId=e._id}},{key:"setAvatarImage",value:function(e){this._userAvatarElement.src=e.avatar}}])&&q(t.prototype,n),e}();function B(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}function A(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}function T(e,t,n){document.querySelector(".".concat(t)).querySelector(".modal__save-button").textContent=n}var U=new(function(){function e(t){!function(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}(this,e),this.baseUrl=t.baseUrl,this.headers=t.headers}var t,n;return t=e,(n=[{key:"_checkErrors",value:function(e){return e.ok?e.json():Promise.reject("Error")}},{key:"getInitialProfile",value:function(){var e=this;return fetch("".concat(this.baseUrl,"/users/me"),{headers:this.headers}).then((function(t){return e._checkErrors(t)}))}},{key:"getInitialCards",value:function(){var e=this;return fetch("".concat(this.baseUrl,"/cards"),{headers:this.headers}).then((function(t){return e._checkErrors(t)}))}},{key:"fetchCard",value:function(e){var t=this,n=e.name,r=e.link;return fetch("".concat(this.baseUrl,"/cards"),{method:"POST",headers:this.headers,body:JSON.stringify({name:n,link:r})}).then((function(e){return t._checkErrors(e)}))}},{key:"fetchProfileInfo",value:function(e){var t=this,n=e.name,r=e.about;return fetch("".concat(this.baseUrl,"/users/me"),{method:"PATCH",headers:this.headers,body:JSON.stringify({name:n,about:r})}).then((function(e){return t._checkErrors(e)}))}},{key:"changeProfileAvatar",value:function(e){var t=this,n=e.avatar;return fetch("".concat(this.baseUrl,"/users/me/avatar"),{method:"PATCH",headers:this.headers,body:JSON.stringify({avatar:n})}).then((function(e){return t._checkErrors(e)}))}},{key:"deleteCard",value:function(e){var t=this;return fetch("".concat(this.baseUrl,"/cards/").concat(e),{method:"DELETE",headers:this.headers}).then((function(e){return t._checkErrors(e)}))}},{key:"likeCard",value:function(e){var t=this;return fetch("".concat(this.baseUrl,"/cards/likes/").concat(e),{method:"PUT",headers:this.headers}).then((function(e){return t._checkErrors(e)}))}},{key:"removeLike",value:function(e){var t=this;return fetch("".concat(this.baseUrl,"/cards/likes/").concat(e),{method:"DELETE",headers:this.headers}).then((function(e){return t._checkErrors(e)}))}}])&&B(t.prototype,n),e}())({baseUrl:"https://around.nomoreparties.co/v1/group-12",headers:{authorization:"f4ba53cb-c4b1-4360-b78c-98b41af44bf6","Content-Type":"application/json"}}),F=U.getInitialProfile(),D=U.getInitialCards();Promise.all([F,D]).then((function(e){var t,n,r=(n=2,function(e){if(Array.isArray(e))return e}(t=e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,i=[],a=!0,l=!1;try{for(n=n.call(e);!(a=(r=n.next()).done)&&(i.push(r.value),!t||i.length!==t);a=!0);}catch(e){l=!0,o=e}finally{try{a||null==n.return||n.return()}finally{if(l)throw o}}return i}}(t,n)||function(e,t){if(e){if("string"==typeof e)return A(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?A(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),o=r[0],i=r[1];V.setUserInfo(o),R.renderItems(i.reverse())})).catch((function(e){console.error(e)}));var x=function(e){return new i({data:e,handlePreviewImage:function(){$.open(e)},handleDeleteIcon:function(t){N.open(t,e._id)},handleLikeIcon:function(t){return t?U.likeCard(e._id):U.removeLike(e._id)},userId:V.getId()},"#elements-template")},R=new P({renderer:function(e){var t=x(e).getView();R.addItem(t)}},"elements"),V=new j({userNameElement:e.profileTitle,userDescriptionElement:e.profileSubtitle,userAvatarElement:n.avatarElement}),M=new L({popupSelector:t.addCardSelector,handleFormSubmit:function(e){T(0,t.addCardSelector,"Creating..."),U.fetchCard(e).then((function(e){var t=x(e);R.addItem(t.getView()),M.close()})).catch((function(e){console.error(e)})).finally((function(){T(0,t.addCardSelector,"Create")}))}}),N=new L({popupSelector:t.deleteCardSelector,handleFormSubmit:function(e,n){T(0,t.deleteCardSelector,"Deleting..."),U.deleteCard(n).then((function(){e.remove(),N.close()})).catch((function(e){console.error(e)})).finally((function(){T(0,t.deleteCardSelector,"Delete")}))}}),J=new L({popupSelector:e.profileModalSelector,handleFormSubmit:function(t){T(0,e.profileModalSelector,"Updating..."),U.fetchProfileInfo(t).then((function(e){V.setUserInfo(e),J.setUserInfo(e),J.close()})).catch((function(e){console.error(e)})).finally((function(){T(0,e.profileModalSelector,"Update")}))}}),H=new L({popupSelector:n.avatarModalSelector,handleFormSubmit:function(e){T(0,n.avatarModalSelector,"Updating..."),U.changeProfileAvatar(e).then((function(e){V.setAvatarImage(e),H.close()})).catch((function(e){console.error(e)})).finally((function(){T(0,n.avatarModalSelector,"Update")}))}}),$=new E("modal_type_image-expand"),z=new u(r,e.profileFormEL),G=new u(r,t.addFormEl),K=new u(r,n.avatarFormEl);z.enableValidation(),G.enableValidation(),K.enableValidation(),M.setEventListeners(),J.setEventListeners(),$.setEventListeners(),H.setEventListeners(),N.setEventListeners(),e.profileAddButton.addEventListener("click",(function(){G.resetValidation(),M.open()})),e.profileEditButton.addEventListener("click",(function(){var t=V.getUserInfo();e.profileFormNameInput.value=t.userName,e.profileFormAboutMeInput.value=t.userDescription,J.open()})),n.avatarEditButton.addEventListener("click",(function(){H.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,